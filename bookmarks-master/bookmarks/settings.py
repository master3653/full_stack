"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mm2*5ikbg7#(cdbcbh&m8canv@frc)ix@#(%sv*iyl$56t))04'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (

    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'account',
    'django.contrib.admin',
    'social.apps.django_app.default',   #社交认证
    #'social_django',
    'oauth',
    'images',
    'sorl.thumbnail',   #生成缩略图
    'actions',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',#中文
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'#中文

TIME_ZONE = 'Asia/Shanghai'#上海时间

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
from django.core.urlresolvers import reverse_lazy
LOGIN_REDIRECT_URL = reverse_lazy('dashboard')#登录成功重定向到url
LOGIN_URL = reverse_lazy('login')#登录失败重定向到url
LOGOUT_URL = reverse_lazy('logout')#注销重定向到url

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  #控制器
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = '372661369@qq.com'
EMAIL_HOST_PASSWORD = 'mtermuaqhkccbjif'   #授权码

MEDIA_URL = '/media/'       #多媒体文件管理
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
AUTH_PROFILE_MODULE = 'account.Profile'

AUTHENTICATION_BACKENDS = (     #用户认证
   'django.contrib.auth.backends.ModelBackend', #用户名密码认证
   'account.authentication.EmailAuthBackend',   #Email密码认证
   'social_core.backends.qq.QQOAuth2',
    #'social.backends.qq.QQOAuth2'
)

#QQ认证
SOCIAL_AUTH_QQ_KEY = '1106219907'
SOCIAL_AUTH_QQ_SECRET = 'AXf0Hq6n661B4Cwo'

SOCIAL_AUTH_QQ_USE_OPENID_AS_USERNAME = True

QQ_KEY='1106219907'
QQ_SECRET='AXf0Hq6n661B4Cwo'
QQ_RECALL_URL = 'http://www.lintong.com:8000/account/oauth/qq/check'
#QQ_RECALL_URL = 'http://127.0.0.1:8080/account/oauth/qq/check'

THUMBNAIL_DEBUG = True

ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_detail',args=[u.username])
}

#AUTH_USER_MODEL = 'User'

REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0